let gameSeq = [];
let userSeq = [];

let colors = ["red", "yellow", "green", "purple"];

let started = false;
let level = 0;
let highScore = 0;

let h2 = document.querySelector("h2");

document.addEventListener("keypress", function () {
  if (started == false) {
    // console.log("Game Started");
    started = true;

    levelUp();
  }
});

function gameFlash(game) {
  game.classList.add("gameflash");
  setTimeout(function () {
    game.classList.remove("gameflash");
  }, 500);
}

function userFlash(user) {
  user.classList.add("userflash");
  setTimeout(function () {
    user.classList.remove("userflash");
  }, 500);
}

function levelUp() {
  userSeq = [];
  level++;
  h2.innerHTML = `Level ${level} <br> Highest Score: <b>${highScore}</b>`;
  let randIdx = Math.floor(Math.random() * 4);
  let randColor = colors[randIdx];
  let randBtn = document.querySelector(`.${randColor}`);
  gameSeq.push(randColor);
  // let index = gameSeq(index);
  console.log("This is generated by game", gameSeq);
  gameFlash(randBtn);
}

function checkAns(idx) {
  // console.log(userSeq.length, "-1", idx);
  if (userSeq[idx] === gameSeq[idx]) {
    if (userSeq.length === gameSeq.length) {
      setTimeout(levelUp, 1000);
    }
  } else {
    // Track highest score
    if (level > highScore) {
      highScore = level;
      localStorage.setItem("highScore", highScore); // Store highest score
    }

    h2.innerHTML = `Game Over! Your Score Was <b>${level}</b> 
    <br> Highest Score: <b>${highScore}</b>
    <br>Press Any Key To Start.`;
    document.querySelector("body").style.backgroundColor = "red";
    setTimeout(function () {
      document.querySelector("body").style.backgroundColor = "white";
    }, 150);

    reset();
  }
}

let allBtns = document.querySelectorAll(".btn");
for (let button of allBtns) {
  button.addEventListener("click", function () {
    // console.log(this);
    let trackBtn = this;
    userFlash(trackBtn);
    let userColor = trackBtn.getAttribute("id");
    userSeq.push(userColor);
    // console.log("This is generated by user", userSeq);
    checkAns(userSeq.length - 1);
  });
}

function reset() {
  started = false;
  gameSeq = [];
  userSeq = [];
  level = 0;
}
